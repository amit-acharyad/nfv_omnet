//
// Generated file, do not edit! Created by opp_msgtool 6.1 from messages/vnfRegistration.msg.
//

#ifndef __VNFREGISTRATION_M_H
#define __VNFREGISTRATION_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class VnfRegistrationMessage;
/**
 * Class generated from <tt>messages/vnfRegistration.msg:1</tt> by opp_msgtool.
 * <pre>
 * packet VnfRegistrationMessage
 * {
 *     int vnfIp;
 *     int nfviNodeId;
 *     int enterpriseId;
 * }
 * </pre>
 */
class VnfRegistrationMessage : public ::omnetpp::cPacket
{
  protected:
    int vnfIp = 0;
    int nfviNodeId = 0;
    int enterpriseId = 0;

  private:
    void copy(const VnfRegistrationMessage& other);

  protected:
    bool operator==(const VnfRegistrationMessage&) = delete;

  public:
    VnfRegistrationMessage(const char *name=nullptr, short kind=0);
    VnfRegistrationMessage(const VnfRegistrationMessage& other);
    virtual ~VnfRegistrationMessage();
    VnfRegistrationMessage& operator=(const VnfRegistrationMessage& other);
    virtual VnfRegistrationMessage *dup() const override {return new VnfRegistrationMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getVnfIp() const;
    virtual void setVnfIp(int vnfIp);

    virtual int getNfviNodeId() const;
    virtual void setNfviNodeId(int nfviNodeId);

    virtual int getEnterpriseId() const;
    virtual void setEnterpriseId(int enterpriseId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VnfRegistrationMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VnfRegistrationMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline VnfRegistrationMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<VnfRegistrationMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __VNFREGISTRATION_M_H

