//
// Generated file, do not edit! Created by opp_msgtool 6.1 from vnftype.msg.
//

#ifndef __VNFTYPE_M_H
#define __VNFTYPE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

/**
 * Enum generated from <tt>vnftype.msg:15</tt> by opp_msgtool.
 * <pre>
 * //
 * // This program is free software: you can redistribute it and/or modify
 * // it under the terms of the GNU Lesser General Public License as published by
 * // the Free Software Foundation, either version 3 of the License, or
 * // (at your option) any later version.
 * // 
 * // This program is distributed in the hope that it will be useful,
 * // but WITHOUT ANY WARRANTY; without even the implied warranty of
 * // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * // GNU Lesser General Public License for more details.
 * // 
 * // You should have received a copy of the GNU Lesser General Public License
 * // along with this program.  If not, see http://www.gnu.org/licenses/.
 * //
 * enum VnfType
 * {
 *     VNF_TYPE_UNKNOWN = 0;
 *     VNF_TYPE_FIREWALL = 1;
 *     VNF_TYPE_LOADBALANCER = 2;
 *     VNF_TYPE_SERVER = 3;
 * }
 * </pre>
 */
enum VnfType {
    VNF_TYPE_UNKNOWN = 0,
    VNF_TYPE_FIREWALL = 1,
    VNF_TYPE_LOADBALANCER = 2,
    VNF_TYPE_SERVER = 3
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VnfType& e) { b->pack(static_cast<int>(e)); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VnfType& e) { int n; b->unpack(n); e = static_cast<VnfType>(n); }


namespace omnetpp {


}  // namespace omnetpp

#endif // ifndef __VNFTYPE_M_H

